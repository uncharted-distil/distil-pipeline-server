// Code generated by protoc-gen-go. DO NOT EDIT.
// source: primitive.proto

package pipeline

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Description of the primitive.
type Primitive struct {
	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version    string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	PythonPath string `protobuf:"bytes,3,opt,name=python_path,json=pythonPath,proto3" json:"python_path,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Digest is optional, because some locally registered primitives might not have it.
	// But for all primitives published it is available and it should be provided here as well.
	Digest               string   `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Primitive) Reset()         { *m = Primitive{} }
func (m *Primitive) String() string { return proto.CompactTextString(m) }
func (*Primitive) ProtoMessage()    {}
func (*Primitive) Descriptor() ([]byte, []int) {
	return fileDescriptor_primitive_791c73a92f28dc9a, []int{0}
}
func (m *Primitive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Primitive.Unmarshal(m, b)
}
func (m *Primitive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Primitive.Marshal(b, m, deterministic)
}
func (dst *Primitive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Primitive.Merge(dst, src)
}
func (m *Primitive) XXX_Size() int {
	return xxx_messageInfo_Primitive.Size(m)
}
func (m *Primitive) XXX_DiscardUnknown() {
	xxx_messageInfo_Primitive.DiscardUnknown(m)
}

var xxx_messageInfo_Primitive proto.InternalMessageInfo

func (m *Primitive) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Primitive) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Primitive) GetPythonPath() string {
	if m != nil {
		return m.PythonPath
	}
	return ""
}

func (m *Primitive) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Primitive) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

func init() {
	proto.RegisterType((*Primitive)(nil), "Primitive")
}

func init() { proto.RegisterFile("primitive.proto", fileDescriptor_primitive_791c73a92f28dc9a) }

var fileDescriptor_primitive_791c73a92f28dc9a = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8e, 0xc1, 0xca, 0x82, 0x40,
	0x10, 0x80, 0xd1, 0xdf, 0xdf, 0x72, 0x82, 0x82, 0x3d, 0xc4, 0xd2, 0x25, 0xe9, 0xd4, 0x29, 0x0f,
	0xbd, 0x41, 0x4f, 0x20, 0x1d, 0xbb, 0x84, 0xb6, 0x93, 0x0e, 0xe8, 0xee, 0xb2, 0x4e, 0x42, 0xd7,
	0x9e, 0x3c, 0x18, 0xf3, 0x36, 0xdf, 0xf7, 0xcd, 0xc0, 0xc0, 0xc6, 0x07, 0xea, 0x89, 0x69, 0xc4,
	0x93, 0x0f, 0x8e, 0xdd, 0x2e, 0x6f, 0x9c, 0x6b, 0x3a, 0x2c, 0x84, 0xea, 0xd7, 0xb3, 0x30, 0x38,
	0x3c, 0x02, 0x79, 0x76, 0x61, 0xda, 0x38, 0x7c, 0x22, 0xc8, 0xca, 0xf9, 0x4a, 0xad, 0x21, 0x26,
	0xa3, 0xa3, 0x3c, 0x3a, 0x66, 0xd7, 0x98, 0x8c, 0xd2, 0xb0, 0x18, 0x31, 0x0c, 0xe4, 0xac, 0x8e,
	0x45, 0xce, 0xa8, 0xf6, 0xb0, 0xf2, 0x6f, 0x6e, 0x9d, 0xbd, 0xfb, 0x8a, 0x5b, 0xfd, 0x27, 0x15,
	0x26, 0x55, 0x56, 0xdc, 0x2a, 0x05, 0x89, 0xad, 0x7a, 0xd4, 0x89, 0x14, 0x99, 0xd5, 0x16, 0x52,
	0x43, 0x0d, 0x0e, 0xac, 0xff, 0xc5, 0xfe, 0xe8, 0x02, 0xb7, 0xa5, 0x27, 0x8f, 0x1d, 0x59, 0xac,
	0x53, 0xf9, 0xeb, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x49, 0xad, 0x53, 0xbe, 0xcc, 0x00, 0x00,
	0x00,
}
